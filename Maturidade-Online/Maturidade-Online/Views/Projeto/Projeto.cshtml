@model  Maturidade_Online.Models.ProjetoModel
@{
    ViewBag.Title = "Projeto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <legend>@(Model.Id.HasValue && Model.Id.Value > 0 ? "Editar" : "Cadastrar" ) @ViewBag.Title</legend>
</div>

<div class="alerta-erro">
    @Html.ValidationSummary(true, "", new { @class = "alert-danger" })
</div>

@if (TempData["MensagemSucesso"] != null)
{
    <div class="alert alert-success">
        <strong>Sucesso!</strong> @TempData["MensagemSucesso"]
    </div>
}

@using (Html.BeginForm("Salvar", "Projeto", FormMethod.Post, new { @class = "form-horizontal col-xs-12" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.Nome)
        @Html.TextBoxFor(model => model.Nome, new { maxlength = 100, @class = "form-control", placeholder = "Título" })
        @Html.ValidationMessageFor(model => model.Nome)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ListaDeCaracteristicas)
        <div id="caracteristicas" class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-tags"></i></span>
            <select id="opcoes" name="@Html.NameFor(m => m.IdsCaracteristicas)" class="js-example-basic-multiple js-states form-control" multiple>
                @foreach (var caracteristica in Model.ListaDeCaracteristicas)
                {
                    <option value="@caracteristica.Id">@caracteristica.Nome</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.IdsCaracteristicas)
        </div>
    </div>


    <div id="container-subtopicos-dados" class="panel panel-default">

    </div>


    <div class="form-group">
        <input type="submit" class="btn btn-sm btn-sucess pull-right" value="Atualizar Gráfico" id="botao-grafico" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-sm btn-success pull-right" value="Salvar">Salvar</button>
    </div>

    <div class="form-group">
        @Html.ActionLink("Voltar", "Listar", "Projeto", "", new { @class = "btn btn-sm btn-default pull-right" })
    </div>

    

    <div class="form-group col-md-6">
        <canvas id="myChart"></canvas>
    </div>

}

@section scripts {
    <script type="text/javascript">
        //<![CDATA[
        // Instanciar SELECT2 ao carregar página
        $(document).ready(function () {
            $("#opcoes").select2();
        });

        // Função para trazer lista de subtópicos quando há alteração na seleção das Características
        var $listagemSubtopicos = $('#container-subtopicos-dados');
        $("#opcoes").change(function () {
            let idsCaracteristicas = $(this).select2('data').map(c => parseInt(c.id));
            const urlGet = '@Url.Action("PesquisarSubtopicos", "Subtopico")';
            jQuery.ajaxSettings.traditional = true;
            $.get(urlGet, { idsCaracteristicas })
                .done(response => {
                    $listagemSubtopicos.html(response);
                }).fail(function (resposta) {
                    console.log(resposta)
                });

        })

        // Função para criar o gráfico quando clicado no botão
        var $divGrafico = $('#grafico');
        var $botaoGrafico = $("#botao-grafico");
        $botaoGrafico.click(function (event) {
            event.preventDefault();
            var labels = [];
            @foreach(var label in Model.PilaresPontuacao)
            {
                @:labels.push("@label.Titulo");
                                                                                                                                                }
            console.log(labels);

            // Inicio captação IDs

            var dados = $('input:checked').map(function () {
                return $(this).val();
                //return $(this).attr('data-pontuacao');
            }).get();
            console.log('dados', dados);
            // Fim captação IDs


            //Ajax

            const urlGet = '@Url.Action("ArrayParaGrafico", "Projeto")';
            $.get(urlGet, { dados })
                .done(response => {
                    var resultado = response.toArray();
                    console.log(response).toArray();
                }).fail(function (resposta) {
                    console.log(resposta)
                });

            //Fim Ajax


            var data = [];
            @foreach(var data in Model.PilaresPontuacao)
            {
                @:data.push("@data.PontuacaoTotal");
                                                                                                                                                }
            console.log(data);

            var dadosTabela = {
                labels: labels,
                datasets: [
                    {
                        label: "Projeto",
                        backgroundColor: "rgba(179,181,198,0.2)",
                        borderColor: "rgba(179,181,198,1)",
                        pointBackgroundColor: "rgba(179,181,198,1)",
                        pointBorderColor: "#fff",
                        pointHoverBackgroundColor: "#fff",
                        pointHoverBorderColor: "rgba(179,181,198,1)",
                        data: dados
                    }]
            };

            var ctx = document.getElementById("myChart");
            var myChart = new Chart(ctx, {
                type: 'radar',
                data: dadosTabela
            });
        })
        //]]>
    </script>
}

